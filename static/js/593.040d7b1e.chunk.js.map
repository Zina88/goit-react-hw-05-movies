{"version":3,"file":"static/js/593.040d7b1e.chunk.js","mappings":"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","sources":["services/getMovieDetails.jsx","components/MovieDetailsList/MovieDetailsList.styled.jsx","components/MovieDetailsList/MovieDetailsList.jsx","pages/MovieDetails.jsx","pages/Pages.styles.jsx"],"sourcesContent":["const getMovieDetails = async moviesId => {\n  const API_KEY = '8562b39677dad16e2334fc338fdc606e';\n  const BASE_URL = `https://api.themoviedb.org/3/`;\n\n  const response = await fetch(`${BASE_URL}movie/${moviesId}?api_key=${API_KEY}&language=en-US`);\n  const data = await response.json();\n\n  return data;\n};\n\n\nexport default getMovieDetails;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { TbPlaylistAdd } from 'react-icons/tb';\n\nexport const Img = styled.img`\n  transition: all 300ms linear;\n  width: 400px;\n\n  &:hover {\n    scale: 1.02;\n    box-shadow: ${p => p.theme.boxShadow.accent};\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 430px 1fr;\n  padding: 15px;\n  border-bottom: 2px double ${p => p.theme.colors.accent};\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  color: ${p => p.theme.colors.accent};\n  font-size: 42px;\n  margin-bottom: 15px;\n`;\n\nexport const Release = styled.p`\n  font-size: 18px;\n  margin-bottom: 15px;\n`;\n\nexport const Genres = styled.ul`\n  margin-bottom: 15px;\n`;\n\nexport const Item = styled.li`\n  margin-left: 30px;\n  list-style: square;\n`;\n\nexport const Vote = styled.div`\n  display: grid;\n  grid-template-columns: 170px 170px;\n  margin-bottom: 15px;\n`;\n\nexport const WrapperNav = styled.div`\n  border-bottom: 1px solid #ccc;\n  padding-bottom: 15px;\n`;\n\nexport const CustomLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n\n  text-decoration: none;\n  transition: all 300ms linear;\n  color: inherit;\n  font-size: 20px;\n\n  &.active {\n    color: ${p => p.theme.colors.accent};\n    border-radius: 10px;\n  }\n`;\n\nexport const CustLogo = styled(TbPlaylistAdd)`\n  margin-right: 7px;\n  width: 25px;\n  height: 25px;\n`;\n","import { Outlet } from 'react-router-dom';\nimport {\n  Img,\n  Wrapper,\n  Title,\n  Release,\n  Genres,\n  Item,\n  Vote,\n  WrapperNav,\n  CustomLink,\n  CustLogo,\n} from './MovieDetailsList.styled';\nimport noPoster from '../../utilits/img/No_Poster.png';\nimport PropTypes from 'prop-types';\n\n\nexport default function MovieDetailsList({ movie }) {\n  const { title, genres, overview, poster_path, release_date, vote_average, vote_count } = movie;\n\n  return (\n    <div>\n      <Wrapper>\n        <div>\n          <Img\n            src={poster_path ? `https://image.tmdb.org/t/p/w400/${poster_path}` : noPoster}\n            alt={title}\n          />\n        </div>\n        <div>\n          <Title> {title}</Title>\n          <Release>\n            Data release: <b>{release_date}</b>\n          </Release>\n          <Vote>\n            <p>\n              Vote Average: <b>{vote_average}</b>\n            </p>\n            <p>\n              Vote Count: <b>{vote_count}</b>\n            </p>\n          </Vote>\n          <Genres>\n            Genres: {genres && genres.map(({ id, name }) => <Item key={id}>{name}</Item>)}\n          </Genres>\n          <p>\n            <b>Overview:</b> <br />\n            {overview}\n          </p>\n        </div>\n      </Wrapper>\n      <WrapperNav>\n        <ul>\n          <li>\n            <CustomLink to=\"cast\">\n              <CustLogo />\n              Cast\n            </CustomLink>\n          </li>\n          <li>\n            <CustomLink to=\"reviews\">\n              <CustLogo />\n              Reviews\n            </CustomLink>\n          </li>\n        </ul>\n      </WrapperNav>\n\n      <Outlet />\n    </div>\n  );\n}\n\nMovieDetailsList.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      }),\n    ),\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n  }),\n};\n","import { useParams, useLocation, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport getMovieDetails from '../services/getMovieDetails';\nimport MovieDetailsList from '../components/MovieDetailsList';\nimport { Back, Wrapper, BackLogo } from './Pages.styles';\n\n\nexport default function MovieDetails() {\n  const { moviesId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n  const backLink = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieDetails(moviesId).then(setMovie);\n  }, [moviesId]);\n\n  return (\n    <Wrapper>\n      <Link to={backLink}>\n        <Back type=\"button\">\n          <BackLogo />Back</Back>\n      </Link>\n\n      <MovieDetailsList movie={movie} />\n    </Wrapper>\n  );\n}\n","import styled from 'styled-components';\nimport { TiArrowBackOutline } from 'react-icons/ti';\n\nexport const Back = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  color: ${p => p.theme.colors.accent};\n  border: 1px solid ${p => p.theme.colors.accent};\n  padding: 5px 15px 5px 10px;\n  border-radius: 3px;\n  margin-bottom: 10px;\n  transition: all 250ms linear;\n\n  &:active,\n  &:hover {\n    background-color: ${p => p.theme.colors.accent};\n    color: white;\n    border: 1px solid ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding: 15px;\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 15px;\n`;\n\nexport const BackLogo = styled(TiArrowBackOutline)`\n  margin-right: 7px;\n  width: 15px;\n  height: 15px;\n`;\n"],"names":["getMovieDetails","moviesId","fetch","response","json","data","Img","styled","p","theme","boxShadow","accent","Wrapper","colors","Title","Release","Genres","Item","Vote","WrapperNav","CustomLink","NavLink","CustLogo","TbPlaylistAdd","MovieDetailsList","movie","title","genres","overview","poster_path","release_date","vote_average","vote_count","src","noPoster","alt","map","id","name","to","MovieDetails","useParams","useState","setMovie","backLink","useLocation","state","from","useEffect","then","type","Back","BackLogo","TiArrowBackOutline"],"sourceRoot":""}