{"version":3,"file":"static/js/593.67de9b4f.chunk.js","mappings":"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","sources":["services/getMovieDetails.jsx","components/MovieDetailsList/MovieDetailsList.styled.jsx","components/MovieDetailsList/MovieDetailsList.jsx","pages/MovieDetails.jsx"],"sourcesContent":["const getMovieDetails = async moviesId => {\n  const API_KEY = '8562b39677dad16e2334fc338fdc606e';\n  const BASE_URL = `https://api.themoviedb.org/3/`;\n\n  const response = await fetch(`${BASE_URL}movie/${moviesId}?api_key=${API_KEY}&language=en-US`);\n  const data = await response.json();\n\n  return data;\n};\n\nexport default getMovieDetails;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { TbPlaylistAdd } from 'react-icons/tb';\nimport { TiArrowBackOutline } from 'react-icons/ti';\n\nexport const Img = styled.img`\n  transition: all 300ms linear;\n  width: 400px;\n\n  &:hover {\n    scale: 1.02;\n    box-shadow: ${p => p.theme.boxShadow.accent};\n  }\n`;\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 430px 1fr;\n  padding: 15px;\n  border-bottom: 2px double ${p => p.theme.colors.accent};\n  margin-bottom: 15px;\n`;\n\nexport const Title = styled.h2`\n  color: ${p => p.theme.colors.accent};\n  font-size: 42px;\n  margin-bottom: 15px;\n`;\n\nexport const Release = styled.p`\n  font-size: 18px;\n  margin-bottom: 15px;\n`;\n\nexport const Genres = styled.ul`\n  margin-bottom: 15px;\n`;\n\nexport const Item = styled.li`\n  margin-left: 30px;\n  list-style: square;\n`;\n\nexport const Vote = styled.div`\n  display: grid;\n  grid-template-columns: 170px 170px;\n  margin-bottom: 15px;\n`;\n\nexport const WrapperNav = styled.div`\n  border-bottom: 1px solid #ccc;\n  padding-bottom: 15px;\n`;\n\nexport const CustomLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n\n  text-decoration: none;\n  transition: all 300ms linear;\n  color: inherit;\n  font-size: 20px;\n\n  &.active {\n    color: ${p => p.theme.colors.accent};\n    border-radius: 10px;\n  }\n`;\n\nexport const CustLogo = styled(TbPlaylistAdd)`\n  margin-right: 7px;\n  width: 25px;\n  height: 25px;\n`;\n\nexport const WrapperBtn = styled.div`\n  padding: 15px 15px 0 15px;\n`;\n\nexport const Back = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n  color: ${p => p.theme.colors.accent};\n  border: 1px solid ${p => p.theme.colors.accent};\n  padding: 5px 15px 5px 10px;\n  border-radius: 3px;\n  transition: all 250ms linear;\n\n  &:active,\n  &:hover {\n    background-color: ${p => p.theme.colors.accent};\n    color: white;\n    border: 1px solid ${p => p.theme.colors.accent};\n  }\n`;\n\nexport const BackLogo = styled(TiArrowBackOutline)`\n  margin-right: 7px;\n  width: 15px;\n  height: 15px;\n`;\n","import { Outlet } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\n\nimport {\n  Img,\n  Wrapper,\n  Title,\n  Release,\n  Genres,\n  Item,\n  Vote,\n  WrapperBtn,\n  Back,\n  BackLogo,\n  CustomLink,\n  WrapperNav,\n  CustLogo,\n} from './MovieDetailsList.styled';\nimport noPoster from 'utilits/img/No_Poster.png';\nimport PropTypes from 'prop-types';\nimport { Suspense } from 'react';\nimport Loader from 'components/Loader';\n\nexport default function MovieDetailsList({ movie }) {\n  const navigate = useNavigate();\n\n  const { original_title, genres, overview, poster_path, release_date, vote_average, vote_count } =\n    movie;\n\n  const back = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div>\n      <WrapperBtn>\n        <Back type=\"button\" onClick={back}>\n          <BackLogo />\n          Back\n        </Back>\n      </WrapperBtn>\n\n      <Wrapper>\n        <div>\n          <Img\n            src={poster_path ? `https://image.tmdb.org/t/p/w400/${poster_path}` : noPoster}\n            alt={original_title}\n          />\n        </div>\n        <div>\n          <Title> {original_title}</Title>\n          <Release>\n            Data release: <b>{release_date}</b>\n          </Release>\n          <Vote>\n            <p>\n              Vote Average: <b>{vote_average}</b>\n            </p>\n            <p>\n              Vote Count: <b>{vote_count}</b>\n            </p>\n          </Vote>\n          <Genres>\n            Genres: {genres && genres.map(({ id, name }) => <Item key={id}>{name}</Item>)}\n          </Genres>\n          <p>\n            <b>Overview:</b> <br />\n            {overview}\n          </p>\n        </div>\n      </Wrapper>\n\n      <WrapperNav>\n        <ul>\n          <li>\n            <CustomLink to=\"cast\">\n              <CustLogo />\n              Cast\n            </CustomLink>\n          </li>\n          <li>\n            <CustomLink to=\"reviews\">\n              <CustLogo />\n              Reviews\n            </CustomLink>\n          </li>\n        </ul>\n      </WrapperNav>\n\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n}\n\nMovieDetailsList.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      }),\n    ),\n    overview: PropTypes.string,\n    poster_path: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    vote_count: PropTypes.number,\n  }),\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport getMovieDetails from 'services/getMovieDetails';\nimport MovieDetailsList from 'components/MovieDetailsList';\n\nexport default function MovieDetails() {\n  const { moviesId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    getMovieDetails(moviesId).then(setMovie);\n  }, [moviesId]);\n\n  return <>{movie && <MovieDetailsList movie={movie} />}</>;\n}\n"],"names":["getMovieDetails","moviesId","fetch","response","json","data","Img","styled","p","theme","boxShadow","accent","Wrapper","colors","Title","Release","Genres","Item","Vote","WrapperNav","CustomLink","NavLink","CustLogo","TbPlaylistAdd","WrapperBtn","Back","BackLogo","TiArrowBackOutline","MovieDetailsList","movie","navigate","useNavigate","original_title","genres","overview","poster_path","release_date","vote_average","vote_count","type","onClick","src","noPoster","alt","map","id","name","to","Suspense","fallback","Loader","MovieDetails","useParams","useState","setMovie","useEffect","then"],"sourceRoot":""}