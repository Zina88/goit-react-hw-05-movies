{"version":3,"file":"static/js/692.e3ef5ef3.chunk.js","mappings":"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","sources":["components/MoviesList/MovieList.styles.jsx","components/MoviesList/MoviesList.jsx","services/getSearchMovie.jsx","components/SearchBox/SearchBox.styled.jsx","components/SearchBox/SearchBox.jsx","pages/MoviesPage.jsx"],"sourcesContent":["import styles from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styles.ul`\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  margin-right: -7px;\n  margin-bottom: -7px;`;\n\nexport const Item = styles.li`\n\n  list-style: none;\n  text-align: center;\n  margin-right: 7px;\n  margin-bottom: 7px;\n  box-shadow: 0px 1px 1px rgba(0, 0, 0, 0.12), 0px 4px 4px rgba(0, 0, 0, 0.06), 1px 4px 6px rgba(0, 0, 0, 0.16);\n  transition: all 300ms linear; \n\n&:hover{\n  scale: 1.01;\n  box-shadow: 0px 1px 1px rgba(200, 101, 247, 0.22), 0px 4px 4px rgba(200, 101, 247, 0.16), 1px 4px 6px rgba(200, 101, 247, 0.26);\n}\n`;\n\nexport const Img = styles.img`\nwidth: 400px;\nheight: 470px;\nmargin-bottom: 10px;\n`;\n\nexport const Title = styles.h2`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 60px;\n  font-size: 24px;\nmargin-bottom: 10px;\n`;\n\nexport const VoteWrapper = styles.div`\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around; \n  margin-bottom: 10px;\n`;\n\nexport const LinkNav = styles(Link)`\ncolor: inherit;\n`;\n\nexport const Vote = styles.b`\ncolor: ${p => p.theme.colors.accent};`;\n","import { Outlet, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, Img, Title, VoteWrapper, LinkNav, Vote } from './MovieList.styles';\nimport noPoster from '../../utilits/img/No_Poster.png';\n\nexport default function MoviesList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <div>\n      <List>\n        {movies.map((movies, index) => (\n          <Item key={index}>\n            <LinkNav to={`/movies/${movies.id}`} state={{ from: location }}>\n              <Img\n                src={\n                  movies.poster_path\n                    ? `https://image.tmdb.org/t/p/w400/${movies.poster_path}`\n                    : noPoster\n                }\n                alt={movies.title}\n              />\n              <Title>{movies.title}</Title>\n              <VoteWrapper>\n                <p>\n                  vote average: <Vote>{movies.vote_average}</Vote>\n                </p>\n                <p>\n                  vote count: <Vote>{movies.vote_count}</Vote>\n                </p>\n              </VoteWrapper>\n            </LinkNav>\n          </Item>\n        ))}\n      </List>\n\n      <Outlet />\n    </div>\n  );\n}\n\nMoviesList.propTypes = {\n  index: PropTypes.string,\n  movies: PropTypes.array,\n};\n","const getSearchMovies = async (query, page = 1) => {\n  const API_KEY = '8562b39677dad16e2334fc338fdc606e';\n  const BASE_URL = `https://api.themoviedb.org/3/search/movie`;\n\n  const response = await fetch(\n    `${BASE_URL}?api_key=${API_KEY}&query=${query}&language=en-US&page=${page}&include_adult=false`,\n  );\n  const data = await response.json();\n\n  return data;\n};\n\nexport default getSearchMovies;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 400px;\n  padding: 7px 20px;\n  border-radius: 8px 0 0 8px;\n  border: 1px solid ${p => p.theme.colors.accent};\n  transition: all 300ms linear;\n\n  &:focus-visible {\n    outline: none;\n  }\n`;\n\nexport const Wrapper = styled.div``;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 15px;\n`;\n\nexport const Button = styled.button`\n  width: 150px;\n\n  background-color: ${p => p.theme.colors.accent};\n  color: ${p => p.theme.colors.white};\n  border: 1px solid ${p => p.theme.colors.accent};\n\n  padding: 7px 20px;\n  border-radius: 0 8px 8px 0;\n  transition: all 250ms linear;\n\n  &:active,\n  &:hover {\n    background-color: ${p => p.theme.colors.hover};\n    border: 1px solid ${p => p.theme.colors.hover};\n  }\n`;\n","import { useState } from 'react';\nimport { Input, Button, Wrapper, Form } from './SearchBox.styled';\nimport PropTypes from 'prop-types';\n\nexport default function SearchBox({ onChange }) {\n  const [movieName, setMovieName] = useState('');\n\n  const onNameChange = e => {\n    setMovieName(e.currentTarget.value.toLowerCase());\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    onChange(movieName);\n\n    setMovieName('');\n  };\n\n  return (\n    <Wrapper>\n      <Form onSubmit={onSubmit}>\n        <Input type=\"text\" autoComplete=\"off\" onChange={onNameChange}></Input>\n        <Button type=\"submit\">Search</Button>\n      </Form>\n    </Wrapper>\n  );\n}\n\nSearchBox.propTypes = {\n  onChange: PropTypes.func,\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport getSearchMovie from 'services/getSearchMovie';\nimport SearchBox from 'components/SearchBox';\nimport MoviesList from 'components/MoviesList';\n\nexport default function MoviesPage() {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query !== '') {\n      getSearchMovie(query).then(({ results }) => {\n        setMovies(results);\n      });\n    }\n  }, [query]);\n\n  const handleSubmit = value => {\n    setMovies([...value]);\n    setSearchParams(value !== '' ? { query: value } : {});\n  };\n\n  return (\n    <div>\n      <SearchBox onChange={handleSubmit} value={query} />\n      {query !== null && <MoviesList movies={movies} />}\n    </div>\n  );\n}\n"],"names":["List","styles","Item","Img","Title","VoteWrapper","LinkNav","Link","Vote","p","theme","colors","accent","MoviesList","movies","location","useLocation","map","index","to","id","state","from","src","poster_path","noPoster","alt","title","vote_average","vote_count","getSearchMovies","query","page","API_KEY","BASE_URL","fetch","response","json","data","Input","styled","Wrapper","Form","Button","white","hover","SearchBox","onChange","useState","movieName","setMovieName","onSubmit","e","preventDefault","type","autoComplete","currentTarget","value","toLowerCase","MoviesPage","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","getSearchMovie","then","results"],"sourceRoot":""}